//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryTracker.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class Asset
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Asset()
        {
            this.PropertyValues = new HashSet<PropertyValue>();
        }
    
        public int AssetID { get; set; }
        public int AssetTypeID { get; set; }
    
        public virtual AssetType AssetType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PropertyValue> PropertyValues { get; set; }

        public AssetBare getAssetBare()
        {
            AssetBare assetBare = new AssetBare();
            assetBare.AssetID = this.AssetID;
            assetBare.AssetType = this.AssetType.getAssetTypeBare();
            // Set the values for the properties
            var i = 0;
            foreach (Property prop in this.AssetType.Properties)
            {
                assetBare.AssetType.Properties[i].Value = this.getPropertyValue(prop);
                i++;
            }
            return assetBare;
        }

        private string getPropertyValue(Property prop)
        {
            foreach (PropertyValue propValue in this.PropertyValues)
            {
                if (propValue.PropertyID == prop.PropertyID)
                {
                    return propValue.Value;
                }
            }
            return "";
        }
    }

    public class AssetBare
    {
        public int AssetID { get; set; }
        public AssetTypeBare AssetType { get; set; }
    }
}
